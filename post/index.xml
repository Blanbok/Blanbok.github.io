<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on BlanBok&#39;s blog</title>
    <link>https://blanbok.github.io/post/</link>
    <description>Recent content in Posts on BlanBok&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Aug 2017 22:32:17 +0800</lastBuildDate>
    
	<atom:link href="https://blanbok.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Objective-c Coding Standard</title>
      <link>https://blanbok.github.io/post/objective-c-coding-standard/</link>
      <pubDate>Tue, 01 Aug 2017 22:32:17 +0800</pubDate>
      
      <guid>https://blanbok.github.io/post/objective-c-coding-standard/</guid>
      <description>此次规范从当前的开发现状（风格各异）出发，奠基于当前的编码习惯，旨在规范大家的编程行为。 待到下次开会的时候，仍需依据自己的习惯，提出针对性的意见。后期将参考此次会上的意见进行修订。
 最近大佬要规范下团队里的编码规范，作为狗腿子的咱自然是要响应下号召咯&amp;hellip;顺带的自己也想把规范定下来，后面一步步的修订，方便代码更新迭代。 还是想着能让自己代码更加的简洁、明了、具有表达力的😁 希望下次谁谁看代码的时候，不用特意去对照界面就能了解这是个做什么的。
 [TOC]
一、命名规范 我们所写的代码主要是为了阅读，其次才是被机器执行。所以我们要写：
 让别人能读懂的代码 可扩展的代码 可测试的代码(代码应该具备可测试性，对没有可测试性的代码写测试，是浪费生命的表现)  （一）、相关参考 1、RC原则  可读性高(Readable) 防止命名冲突(Conflict Name prevention)
 说到命名，就先来介绍下常用的命名方法：
常用命名方法 （1）匈牙利命名： 开头字母用变量类型的缩写，其余部分用变量的英文或英文的缩写，要求单词第一个字母大写。
int iMyAge; “i”是int类型的缩写； char cMyName[10]; “c”是char类型的缩写； float fManHeight; “f”是float类型的缩写；  
（2）驼峰式命名法 又叫小驼峰式命名法。 第一个单词首字母小写，后面其他单词首字母大写。
int myAge; char myName[10]; float manHeight;  
（3）帕斯卡命名法 又叫大驼峰式命名法。 每个单词的第一个字母都大写。
int MyAge; char MyName[10]; float ManHeight;  
（4）下划线命名法 在命名中添加下划线用以标识 一般Object-C中建议我们在命名前加_，用以区分成员变量与其它变量的 在命名后加_，通常用在宏命名中 其它情况下在，_添加在标识不同含义的单词块之间用以区分
int _myage; char my_name[10]; __FILE__  2、TEDC原则  简洁(Terse) 具有表达力(Expressive) 只做一件事(Do one thing)</description>
    </item>
    
  </channel>
</rss>